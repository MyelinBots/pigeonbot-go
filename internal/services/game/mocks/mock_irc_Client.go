// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MyelinBots/pigeonbot-go/internal/services/game (interfaces: IRCClient)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_irc_Client.go -package=mocks github.com/MyelinBots/pigeonbot-go/internal/services/game IRCClient
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIRCClient is a mock of IRCClient interface.
type MockIRCClient struct {
	ctrl     *gomock.Controller
	recorder *MockIRCClientMockRecorder
	isgomock struct{}
}

// MockIRCClientMockRecorder is the mock recorder for MockIRCClient.
type MockIRCClientMockRecorder struct {
	mock *MockIRCClient
}

// NewMockIRCClient creates a new mock instance.
func NewMockIRCClient(ctrl *gomock.Controller) *MockIRCClient {
	mock := &MockIRCClient{ctrl: ctrl}
	mock.recorder = &MockIRCClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRCClient) EXPECT() *MockIRCClientMockRecorder {
	return m.recorder
}

// Privmsg mocks base method.
func (m *MockIRCClient) Privmsg(channel, message string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Privmsg", channel, message)
}

// Privmsg indicates an expected call of Privmsg.
func (mr *MockIRCClientMockRecorder) Privmsg(channel, message any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Privmsg", reflect.TypeOf((*MockIRCClient)(nil).Privmsg), channel, message)
}
